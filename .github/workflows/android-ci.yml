# ... (existing workflow preamble)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest # Or your specified runner
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures full history for gradlew to function properly

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # --- Start: New/Updated Diagnostic & Fix Steps ---

      - name: Ensure gradlew has execute permissions
        run: |
          chmod +x android/gradlew
        # This makes sure the gradlew script is executable.

      - name: Debug - Show gradle-wrapper.properties content (for verification)
        run: cat android/gradle/wrapper/gradle-wrapper.properties
        # Verify the content is correct (gradle-8.0-all.zip).

      - name: Debug - Which Java is being used (for verification)
        run: |
          java -version
          which java

      - name: Force Gradle Wrapper JAR download and verify version
        run: |
          cd android
          ./gradlew help --no-daemon # 'help' is a light command. --no-daemon prevents daemon issues.
        # This command will force the download of gradle-wrapper.jar if it's missing.
        # It also implicitly runs a version check. If this passes, the JAR download was successful.

      # --- End: New/Updated Diagnostic & Fix Steps ---

      - name: Build Android App with Gradle
        run: |
          cd android
          ./gradlew clean assembleDebug # Your actual build command
        # This step will now run after the JAR has (hopefully) been downloaded and verified.
